{"ast":null,"code":"\"use strict\";\n/*!\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAgent = exports.pool = void 0;\n\nvar http_1 = require(\"http\");\n\nvar https_1 = require(\"https\"); // eslint-disable-next-line node/no-deprecated-api\n\n\nvar url_1 = require(\"url\");\n\nexports.pool = new Map();\n/**\n * Returns a custom request Agent if one is found, otherwise returns undefined\n * which will result in the global http(s) Agent being used.\n * @private\n * @param {string} uri The request uri\n * @param {Options} reqOpts The request options\n * @returns {HttpAnyAgent|undefined}\n */\n\nfunction getAgent(uri, reqOpts) {\n  var isHttp = uri.startsWith('http://');\n  var proxy = reqOpts.proxy || process.env.HTTP_PROXY || process.env.http_proxy || process.env.HTTPS_PROXY || process.env.https_proxy;\n  var poolOptions = Object.assign({}, reqOpts.pool);\n\n  if (proxy) {\n    // tslint:disable-next-line variable-name\n    var Agent = isHttp ? require('http-proxy-agent') : require('https-proxy-agent');\n\n    var proxyOpts = _objectSpread(_objectSpread({}, url_1.parse(proxy)), poolOptions);\n\n    return new Agent(proxyOpts);\n  }\n\n  var key = isHttp ? 'http' : 'https';\n\n  if (reqOpts.forever) {\n    key += ':forever';\n\n    if (!exports.pool.has(key)) {\n      // tslint:disable-next-line variable-name\n      var _Agent = isHttp ? http_1.Agent : https_1.Agent;\n\n      exports.pool.set(key, new _Agent(_objectSpread(_objectSpread({}, poolOptions), {}, {\n        keepAlive: true\n      })));\n    }\n  }\n\n  return exports.pool.get(key);\n}\n\nexports.getAgent = getAgent;","map":null,"metadata":{},"sourceType":"module"}