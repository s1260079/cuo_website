{"ast":null,"code":"\"use strict\"; // Copyright 2015 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserRefreshClient = void 0;\n\nvar oauth2client_1 = require(\"./oauth2client\");\n\nvar UserRefreshClient = /*#__PURE__*/function (_oauth2client_1$OAuth) {\n  _inherits(UserRefreshClient, _oauth2client_1$OAuth);\n\n  var _super = _createSuper(UserRefreshClient);\n\n  function UserRefreshClient(optionsOrClientId, clientSecret, refreshToken, eagerRefreshThresholdMillis, forceRefreshOnFailure) {\n    var _this;\n\n    _classCallCheck(this, UserRefreshClient);\n\n    var opts = optionsOrClientId && _typeof(optionsOrClientId) === 'object' ? optionsOrClientId : {\n      clientId: optionsOrClientId,\n      clientSecret: clientSecret,\n      refreshToken: refreshToken,\n      eagerRefreshThresholdMillis: eagerRefreshThresholdMillis,\n      forceRefreshOnFailure: forceRefreshOnFailure\n    };\n    _this = _super.call(this, {\n      clientId: opts.clientId,\n      clientSecret: opts.clientSecret,\n      eagerRefreshThresholdMillis: opts.eagerRefreshThresholdMillis,\n      forceRefreshOnFailure: opts.forceRefreshOnFailure\n    });\n    _this._refreshToken = opts.refreshToken;\n    _this.credentials.refresh_token = opts.refreshToken;\n    return _this;\n  }\n  /**\n   * Refreshes the access token.\n   * @param refreshToken An ignored refreshToken..\n   * @param callback Optional callback.\n   */\n\n\n  _createClass(UserRefreshClient, [{\n    key: \"refreshTokenNoCache\",\n    value: function () {\n      var _refreshTokenNoCache = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee( // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      refreshToken) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", _get(_getPrototypeOf(UserRefreshClient.prototype), \"refreshTokenNoCache\", this).call(this, this._refreshToken));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function refreshTokenNoCache(_x) {\n        return _refreshTokenNoCache.apply(this, arguments);\n      }\n\n      return refreshTokenNoCache;\n    }()\n    /**\n     * Create a UserRefreshClient credentials instance using the given input\n     * options.\n     * @param json The input object.\n     */\n\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      if (!json) {\n        throw new Error('Must pass in a JSON object containing the user refresh token');\n      }\n\n      if (json.type !== 'authorized_user') {\n        throw new Error('The incoming JSON object does not have the \"authorized_user\" type');\n      }\n\n      if (!json.client_id) {\n        throw new Error('The incoming JSON object does not contain a client_id field');\n      }\n\n      if (!json.client_secret) {\n        throw new Error('The incoming JSON object does not contain a client_secret field');\n      }\n\n      if (!json.refresh_token) {\n        throw new Error('The incoming JSON object does not contain a refresh_token field');\n      }\n\n      this._clientId = json.client_id;\n      this._clientSecret = json.client_secret;\n      this._refreshToken = json.refresh_token;\n      this.credentials.refresh_token = json.refresh_token;\n      this.quotaProjectId = json.quota_project_id;\n    }\n  }, {\n    key: \"fromStream\",\n    value: function fromStream(inputStream, callback) {\n      if (callback) {\n        this.fromStreamAsync(inputStream).then(function () {\n          return callback();\n        }, callback);\n      } else {\n        return this.fromStreamAsync(inputStream);\n      }\n    }\n  }, {\n    key: \"fromStreamAsync\",\n    value: function () {\n      var _fromStreamAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(inputStream) {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  if (!inputStream) {\n                    return reject(new Error('Must pass in a stream containing the user refresh token.'));\n                  }\n\n                  var s = '';\n                  inputStream.setEncoding('utf8').on('error', reject).on('data', function (chunk) {\n                    return s += chunk;\n                  }).on('end', function () {\n                    try {\n                      var data = JSON.parse(s);\n\n                      _this2.fromJSON(data);\n\n                      return resolve();\n                    } catch (err) {\n                      return reject(err);\n                    }\n                  });\n                }));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function fromStreamAsync(_x2) {\n        return _fromStreamAsync.apply(this, arguments);\n      }\n\n      return fromStreamAsync;\n    }()\n  }]);\n\n  return UserRefreshClient;\n}(oauth2client_1.OAuth2Client);\n\nexports.UserRefreshClient = UserRefreshClient;","map":null,"metadata":{},"sourceType":"module"}