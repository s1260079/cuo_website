{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport firebase from 'firebase';\nimport axios from \"axios\";\nexport default {\n  data: function data() {\n    return {\n      created: '',\n      password2: '',\n      message: '',\n      user: {\n        username: '',\n        password: '',\n        email: '',\n        part: '',\n        likeBand: '',\n        message: ''\n      }\n    };\n  },\n  methods: {\n    mail_vali: function mail_vali() {\n      if (this.user.email.match(/.+@.+\\..+/) == null) {\n        this.message = '※ 有効なメールアドレスではありません。';\n        return true;\n      } else {\n        return false;\n      }\n    },\n    pass_vali: function pass_vali() {\n      if (this.user.password.length < 6) {\n        this.message = '※ パスワードは6文字以上です。';\n        return true;\n      } else return false;\n    },\n    pass12_vali: function pass12_vali() {\n      if (this.user.password != this.password2) {\n        this.message = '※ パスワードが確認用パスワードと一致しません。';\n        return true;\n      } else return false;\n    },\n    signUp: function signUp() {\n      var _this = this;\n\n      if (this.mail_vali()) return;\n      if (this.pass_vali()) return;\n      if (this.pass12_vali()) return;\n      this.created = 'しばらくお待ちください。';\n      axios.post('/api/users', {\n        user: this.user\n      }).then(function (error) {\n        console.log(error);\n      });\n      firebase.auth().createUserWithEmailAndPassword(this.user.email, this.password2).then(function (user) {\n        // eslint-disable-line\n        // alert('Create account: ', user.email)\n        _this.created = '登録が完了しました。';\n\n        _this.$router.push('/');\n      })[\"catch\"](function (error) {\n        alert(error.message);\n      });\n      this.username = '';\n      this.email = '';\n      this.user.password = '';\n      this.password2 = '';\n      this.message = '';\n    }\n  }\n};","map":{"version":3,"sources":["Signup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAwBA,OAAA,QAAA,MAAA,UAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA,EAHA;AAIA,MAAA,IAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA,EAHA;AAIA,QAAA,IAAA,EAAA,EAJA;AAKA,QAAA,QAAA,EAAA,EALA;AAMA,QAAA,OAAA,EAAA;AANA;AAJA,KAAA;AAaA,GAfA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,UAAA,KAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,WAAA,KAAA,IAAA,EAAA;AACA,aAAA,OAAA,GAAA,sBAAA;AACA,eAAA,IAAA;AACA,OAHA,MAGA;AACA,eAAA,KAAA;AACA;AACA,KARA;AASA,IAAA,SATA,uBASA;AACA,UAAA,KAAA,IAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,OAAA,GAAA,kBAAA;AACA,eAAA,IAAA;AACA,OAHA,MAIA,OAAA,KAAA;AACA,KAfA;AAgBA,IAAA,WAhBA,yBAgBA;AACA,UAAA,KAAA,IAAA,CAAA,QAAA,IAAA,KAAA,SAAA,EAAA;AACA,aAAA,OAAA,GAAA,0BAAA;AACA,eAAA,IAAA;AACA,OAHA,MAIA,OAAA,KAAA;AACA,KAtBA;AAuBA,IAAA,MAvBA,oBAuBA;AAAA;;AACA,UAAA,KAAA,SAAA,EAAA,EAAA;AACA,UAAA,KAAA,SAAA,EAAA,EAAA;AACA,UAAA,KAAA,WAAA,EAAA,EAAA;AACA,WAAA,OAAA,GAAA,cAAA;AACA,MAAA,KAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,OAAA,EAAA,IAAA,CAAA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,OAFA;AAGA,MAAA,QAAA,CAAA,IAAA,GAAA,8BAAA,CAAA,KAAA,IAAA,CAAA,KAAA,EAAA,KAAA,SAAA,EACA,IADA,CACA,UAAA,IAAA,EAAA;AAAA;AACA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,YAAA;;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA,OALA,WAMA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA;AACA,OARA;AAUA,WAAA,QAAA,GAAA,EAAA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,WAAA,IAAA,CAAA,QAAA,GAAA,EAAA;AACA,WAAA,SAAA,GAAA,EAAA;AACA,WAAA,OAAA,GAAA,EAAA;AACA;AA9CA;AAhBA,CAAA","sourcesContent":["<template>\n  <div class=\"signUpWrapper\">\n    <h1>Welcome to CUO</h1>\n\n    <div class=\"inputWrapper\">\n      <div class=\"in\">\n        <input class=\"input mInput\" placeholder=\"ユーザーネーム\" v-model=\"user.username\"/>\n        <input class=\"input mInput\" placeholder=\"メールアドレス\" v-model=\"user.email\"/>\n        <input class=\"input pInput\" placeholder=\"パスワード\" v-model=\"user.password\"/>\n        <input class=\"input p2Input\" placeholder=\"パスワード（確認用）\" v-model=\"password2\"/>\n      </div>\n      <button class=\"Btn\" @click=\"signUp()\">新規登録</button>\n      <div class=\"alert\">\n        <p>{{ message }}</p>\n        <p class=\"created\">{{ created }}</p>\n      </div>\n      <router-link to=\"/signIn\">\n        <button class=\"Btn loginBtn\">ログイン画面</button>\n      </router-link>\n    </div>\n  </div>\n</template>\n\n<script>\nimport firebase from 'firebase'\nimport axios from \"axios\";\nexport default {\n  data () {\n    return {\n      created: '',\n      password2: '',\n      message: '',\n      user:{\n        username: '',\n        password: '',\n        email:'',\n        part: '',\n        likeBand: '',\n        message: '',\n      }\n    }\n  },\n  methods: {\n    mail_vali() {\n      if( this.user.email.match(/.+@.+\\..+/) == null ) {\n        this.message = '※ 有効なメールアドレスではありません。'\n        return true\n      } else {\n        return false\n      }\n    },\n    pass_vali() {\n      if(this.user.password.length < 6) {\n        this.message = '※ パスワードは6文字以上です。'\n        return true\n      }\n      else return false\n    },\n    pass12_vali() {\n      if(this.user.password != this.password2) {\n        this.message = '※ パスワードが確認用パスワードと一致しません。'\n        return true\n      }\n      else return false\n    },\n    signUp() {\n      if( this.mail_vali() ) return\n      if( this.pass_vali() ) return\n      if( this.pass12_vali() ) return\n      this.created = 'しばらくお待ちください。'\n      axios.post('/api/users', { user: this.user }).then((error) => {\n          console.log(error);\n      });\n      firebase.auth().createUserWithEmailAndPassword(this.user.email, this.password2)\n        .then(user => { // eslint-disable-line\n          // alert('Create account: ', user.email)\n          this.created = '登録が完了しました。'\n          this.$router.push('/')\n        })\n        .catch(error => {\n          alert(error.message)\n        })\n\n      this.username = ''\n      this.email = ''\n      this.user.password = ''\n      this.password2 = ''\n      this.message = ''\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.signUpWrapper {\n\n  width: 320px;\n  margin: auto;\n  h1 {\n    color: yellow;\n    font-weight: 900;\n    margin-top: 80px;\n    font-size: 30px;\n  }\n  .inputWrapper {\n    width: 90%;\n    margin: auto;\n    .loginTitle {\n      width: 100%;\n      h2 {\n        width: 50%;\n        margin: 0 auto;\n        display: inline-block;\n        font-size: 10px;\n        font-weight: normal;\n        background-color: white;\n        border: 1px solid rgb(201, 205, 210);\n        margin-bottom: 0;\n        padding: 8px 0;\n        box-sizing: border-box;\n      }\n      .mlogin {\n        border-right: 0 solid rgb(201, 205, 210);\n      }\n      .qlogin {\n        background-color: rgb(236, 236, 236);\n      }\n    }\n    .in {\n      border-right: 1px solid rgb(201, 205, 210);\n      border-left: 1px solid rgb(201, 205, 210);\n      border-bottom: 1px solid rgb(201, 205, 210);\n      input {\n        border: 0;\n      }\n      .input {\n        padding: 8px;\n        min-width: 100%;\n        display: inline;\n        margin: auto;\n        box-sizing: border-box;\n        border-color: rgb(201, 205, 210);\n      }\n      .mInput {\n        border-top: 1px solid rgb(201, 205, 210);\n        border-bottom: 1px solid rgb(201, 205, 210);\n      }\n      .pInput {\n        border-bottom: 1px solid rgb(201, 205, 210);\n      }\n    }\n    .alert {\n      height: 18px;\n      p {\n        font-size: 12px;\n        text-align: left;\n        color: red;\n      }\n      .created {\n        color: #2c3e50;\n        font-size: 16px;\n        text-align: center;\n      }\n    }\n    .Btn {\n      color: #2c3e50;\n      font-size: 16px;\n      margin-top: 6px;\n      background-color: white;\n      padding: 8px 0;\n      width: 100%;\n      border-color: rgb(201, 205, 210);\n    }\n    .loginBtn {\n      margin-top: 50px;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"app/javascript/views"},"metadata":{},"sourceType":"module"}