{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      loading: false,\n      headers: [{\n        text: 'ID',\n        align: 'center',\n        sortable: true,\n        value: 'form_id'\n      }, {\n        text: 'タイトル',\n        align: 'center',\n        sortable: true,\n        value: 'title'\n      }, {\n        text: 'URL',\n        align: 'center',\n        sortable: false,\n        value: 'uri'\n      }, {\n        text: '種別',\n        align: 'center',\n        sortable: false,\n        value: 'form_type'\n      }, {\n        text: '公開',\n        align: 'center',\n        sortable: false,\n        value: 'is_open'\n      }, {\n        text: '作成日時',\n        align: 'center',\n        sortable: true,\n        value: 'created_at'\n      }, {\n        text: '更新日時',\n        align: 'center',\n        sortable: true,\n        value: 'updated_at'\n      }, {\n        text: '組織',\n        align: 'center',\n        sortable: false,\n        value: 'code'\n      }, {\n        text: '操作',\n        align: 'center',\n        sortable: false,\n        value: 'action'\n      }],\n      options: {\n        page: 1,\n        itemsPerPage: 20,\n        sortBy: ['form_id'],\n        sortDesc: [true]\n      },\n      items: [],\n      total: 0,\n      selectionItems: {\n        form_type: ['銀行', '郵便局']\n      },\n      model: {\n        'title': '',\n        type: null,\n        is_open: null\n      }\n    };\n  },\n  watch: {\n    options: {\n      handler: function handler() {\n        this.loadList();\n      },\n      deep: true\n    }\n  },\n  methods: {\n    loadList: function loadList() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var sorts, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.loading = true;\n                _context.prev = 1;\n                sorts = [];\n\n                if (_this.options.sortBy !== null) {\n                  _this.options.sortBy.forEach(function (value, index) {\n                    sorts.push((_this.options.sortDesc[index] ? '-' : '+') + value);\n                  });\n                }\n\n                _context.next = 6;\n                return Axios.post('/api/list', Object.assign(_this.model, {\n                  offset: (_this.options.page - 1) * _this.options.itemsPerPage,\n                  limit: _this.options.itemsPerPage,\n                  sort: sorts.join(' ')\n                }));\n\n              case 6:\n                res = _context.sent;\n\n                if (res.data) {\n                  _this.items = res.data.items;\n                  _this.total = res.data.total;\n                }\n\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](1);\n                alert('情報を取得できませんでした。時間をおいてやり直してください。');\n\n              case 13:\n                _this.loading = false;\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 10]]);\n      }))();\n    }\n  },\n  created: function created() {\n    this.loadList();\n  }\n};","map":{"version":3,"sources":["Movie.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"form\">\n    <v-container fluid>\n      <v-row justify=\"center\">\n        <v-col>\n          <v-card>\n            <v-app-bar color=\"primary\" dark>\n              <v-toolbar-title><v-icon>list_alt</v-icon> ○○一覧</v-toolbar-title>\n              <v-tooltip bottom>\n                <template v-slot:activator=\"{ on }\">\n                  <v-btn color=\"pink\" dark small absolute bottom right fab to=\"/create\" v-on=\"on\"><v-icon>add</v-icon></v-btn>\n                </template>\n                <span>新しい○○を作成する</span>\n              </v-tooltip>\n            </v-app-bar>\n            <v-form v-model=\"valid\" ref=\"listForm\" lazy-validation>\n              <v-container fluid class=\"pa-1\">\n                <v-row class=\"px-2\">\n                  <v-col cols=\"6\" class=\"pa-1\">\n                    <v-text-field\n                      prepend-inner-icon=\"search\"\n                      clearable\n                      label=\"タイトル\"\n                      name=\"title\"\n                      maxlength=\"64\"\n                      v-model=\"model.title\"\n                      @change=\"loadList\"\n                    ></v-text-field>\n                  </v-col>\n                  <v-col cols=\"3\" class=\"pa-1\">\n                    <v-select\n                      label=\"種別\"\n                      name=\"type\"\n                      item-text=\"label\"\n                      item-value=\"value\"\n                      :items=\"[\n                        { label: '-', value: null },\n                        { label: '銀行', value: 0 },\n                        { label: '郵便局', value: 1 },\n                      ]\"\n                      v-model=\"model.type\"\n                      @change=\"loadList\"\n                    ></v-select>\n                  </v-col>\n                  <v-col cols=\"3\" class=\"pa-1\">\n                    <v-select\n                      label=\"公開\"\n                      name=\"is_open\"\n                      item-text=\"label\"\n                      item-value=\"value\"\n                      :items=\"[\n                        { label: '-', value: null },\n                        { label: '公開中', value: true },\n                        { label: '未公開', value: false },\n                      ]\"\n                      v-model=\"model.is_open\"\n                      @change=\"loadList\"\n                    ></v-select>\n                  </v-col>\n                </v-row>\n              </v-container>\n              <v-data-table\n                :headers=\"headers\"\n                :items=\"items\"\n                :options.sync=\"options\"\n                :server-items-length=\"total\"\n                :footer-props=\"{\n                  'items-per-page-options': [10, 20, 50, 100, 200, 300, 400, 500],\n                  showFirstLastPage: true,\n                }\"\n                :loading=\"loading\"\n                multi-sort\n                locale=\"ja-jp\"\n                loading-text=\"読込中\"\n                no-data-text=\"データがありません。\"\n                class=\"elevation-1\"\n              >\n                <template v-slot:item.uri=\"{ item }\">\n                  <a\n                    :href=\"'https://hoge.jp/' + item.uri\"\n                    target=\"_blank\"\n                    >hoge.jp/{{ item.uri }}</a\n                  >\n                </template>\n                <template v-slot:item.type=\"{ item }\">\n                  {{ selectionItems.type[item.type] }}\n                </template>\n                <template v-slot:item.is_open=\"{ item }\">\n                  <v-icon v-if=\"item.is_open\">check</v-icon>\n                </template>\n                <template v-slot:item.created_at=\"{ item }\">\n                  {{ item.created_at.replace('T', ' ').replace(/-/g, '/') }}\n                </template>\n                <template v-slot:item.updated_at=\"{ item }\">\n                  {{ item.updated_at.replace('T', ' ').replace(/-/g, '/') }}\n                </template>\n                <template v-slot:item.code=\"{ item }\">\n                  {{ item.name }}\n                </template>\n                <template v-slot:item.action=\"{ item }\">\n                  <v-btn small class=\"mx-1\" color=\"orange accent-4\" :to=\"'/detail/' + item.uri\">\n                    <v-icon>pageview</v-icon>詳細\n                  </v-btn>\n                  <v-btn small class=\"mx-1\" color=\"orange accent-4\" :to=\"'/stats/' + item.uri\">\n                    <v-icon>bar_chart</v-icon>集計\n                  </v-btn>\n                </template>\n              </v-data-table>\n            </v-form>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </div>\n</template>\n\n<script>\nimport Axios from 'axios'\nexport default {\n  data: () => ({\n    loading: false,\n    headers: [\n      { text: 'ID', align: 'center', sortable: true, value: 'form_id' },\n      { text: 'タイトル', align: 'center', sortable: true, value: 'title' },\n      { text: 'URL', align: 'center', sortable: false, value: 'uri' },\n      { text: '種別', align: 'center', sortable: false, value: 'form_type' },\n      { text: '公開', align: 'center', sortable: false, value: 'is_open' },\n      { text: '作成日時', align: 'center', sortable: true, value: 'created_at' },\n      { text: '更新日時', align: 'center', sortable: true, value: 'updated_at' },\n      { text: '組織', align: 'center', sortable: false, value: 'code' },\n      { text: '操作', align: 'center', sortable: false, value: 'action' }\n    ],\n    options: {\n      page: 1,\n      itemsPerPage: 20,\n      sortBy: ['form_id'],\n      sortDesc: [true],\n    },\n    items: [],\n    total: 0,\n    selectionItems: {\n      form_type: ['銀行', '郵便局'],\n    },\n    model: {\n      'title': '',\n      type: null,\n      is_open: null,\n    },\n  }),\n  watch: {\n    options: {\n      handler() {\n        this.loadList()\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    async loadList() {\n      this.loading = true\n      try {\n        let sorts = []\n        if (this.options.sortBy !== null) {\n          this.options.sortBy.forEach((value, index) => {\n            sorts.push((this.options.sortDesc[index] ? '-' : '+') + value)\n          })\n        }\n        const res = await Axios.post(\n          '/api/list',\n          Object.assign(this.model, {\n            offset: (this.options.page - 1) * this.options.itemsPerPage,\n            limit: this.options.itemsPerPage,\n            sort: sorts.join(' ')\n          })\n        )\n        if (res.data) {\n          this.items = res.data.items\n          this.total = res.data.total\n        }\n      } catch (error) {\n        alert('情報を取得できませんでした。時間をおいてやり直してください。')\n      }\n      this.loading = false\n    },\n  },\n  created: function() {\n    this.loadList()\n  },\n}\n</script>\n"],"sourceRoot":"app/javascript/views"},"metadata":{},"sourceType":"module"}