{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IdTokenClient = void 0;\n\nvar oauth2client_1 = require(\"./oauth2client\");\n\nvar IdTokenClient = /*#__PURE__*/function (_oauth2client_1$OAuth) {\n  _inherits(IdTokenClient, _oauth2client_1$OAuth);\n\n  var _super = _createSuper(IdTokenClient);\n\n  /**\n   * Google ID Token client\n   *\n   * Retrieve access token from the metadata server.\n   * See: https://developers.google.com/compute/docs/authentication\n   */\n  function IdTokenClient(options) {\n    var _this;\n\n    _classCallCheck(this, IdTokenClient);\n\n    _this = _super.call(this);\n    _this.targetAudience = options.targetAudience;\n    _this.idTokenProvider = options.idTokenProvider;\n    return _this;\n  }\n\n  _createClass(IdTokenClient, [{\n    key: \"getRequestMetadataAsync\",\n    value: function () {\n      var _getRequestMetadataAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee( // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      url) {\n        var idToken, headers;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(!this.credentials.id_token || (this.credentials.expiry_date || 0) < Date.now())) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 3;\n                return this.idTokenProvider.fetchIdToken(this.targetAudience);\n\n              case 3:\n                idToken = _context.sent;\n                this.credentials = {\n                  id_token: idToken,\n                  expiry_date: this.getIdTokenExpiryDate(idToken)\n                };\n\n              case 5:\n                headers = {\n                  Authorization: 'Bearer ' + this.credentials.id_token\n                };\n                return _context.abrupt(\"return\", {\n                  headers: headers\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getRequestMetadataAsync(_x) {\n        return _getRequestMetadataAsync.apply(this, arguments);\n      }\n\n      return getRequestMetadataAsync;\n    }()\n  }, {\n    key: \"getIdTokenExpiryDate\",\n    value: function getIdTokenExpiryDate(idToken) {\n      var payloadB64 = idToken.split('.')[1];\n\n      if (payloadB64) {\n        var payload = JSON.parse(Buffer.from(payloadB64, 'base64').toString('ascii'));\n        return payload.exp * 1000;\n      }\n    }\n  }]);\n\n  return IdTokenClient;\n}(oauth2client_1.OAuth2Client);\n\nexports.IdTokenClient = IdTokenClient;","map":null,"metadata":{},"sourceType":"module"}