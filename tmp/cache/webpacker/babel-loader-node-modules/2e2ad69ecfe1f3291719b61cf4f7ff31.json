{"ast":null,"code":"/* eslint no-console: 0 */\n// Run this example by adding <%= javascript_pack_tag 'hello_vue' %> (and\n// <%= stylesheet_pack_tag 'hello_vue' %> if you have styles in your component)\n// to the head of your layout file,\n// like app/views/layouts/application.html.erb.\n// All it does is render <div>Hello Vue</div> at the bottom of the page.\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport VueRouter from \"vue-router\";\nimport store from \"../store/store.js\";\nimport router from \"../routes/router.js\";\nimport App from \"../app.vue\";\nimport axios from \"axios\";\nimport VueAxios from \"vue-axios\";\nimport firebase from 'firebase';\nVue.use(Vuex);\nVue.use(VueRouter);\nVue.use(VueAxios, axios);\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  var app = new Vue({\n    store: store,\n    router: router,\n    render: function render(h) {\n      return h(App);\n    }\n  }).$mount();\n  document.body.appendChild(app.$el);\n}); // The above code uses Vue without the compiler, which means you cannot\n// use Vue to target elements in your existing html templates. You would\n// need to always use single file components.\n// To be able to target elements in your existing html/erb templates,\n// comment out the above code and uncomment the below\n// Add <%= javascript_pack_tag 'hello_vue' %> to your layout\n// Then add this markup to your html template:\n//\n// <div id='hello'>\n//   {{message}}\n//   <app></app>\n// </div>\n// import Vue from 'vue/dist/vue.esm'\n// import App from '../app.vue'\n//\n// document.addEventListener('DOMContentLoaded', () => {\n//   const app = new Vue({\n//     el: '#hello',\n//     data: {\n//       message: \"Can you say hello?\"\n//     },\n//     components: { App }\n//   })\n// })\n//\n//\n//\n// If the project is using turbolinks, install 'vue-turbolinks':\n//\n// yarn add vue-turbolinks\n//\n// Then uncomment the code block below:\n//\n// import TurbolinksAdapter from 'vue-turbolinks'\n// import Vue from 'vue/dist/vue.esm'\n// import App from '../app.vue'\n//\n// Vue.use(TurbolinksAdapter)\n//\n// document.addEventListener('turbolinks:load', () => {\n//   const app = new Vue({\n//     el: '#hello',\n//     data: () => {\n//       return {\n//         message: \"Can you say hello?\"\n//       }\n//     },\n//     components: { App }\n//   })\n// })","map":{"version":3,"sources":["/var/src/app/app/javascript/packs/hello_vue.js"],"names":["Vue","Vuex","VueRouter","store","router","App","axios","VueAxios","firebase","use","document","addEventListener","app","render","h","$mount","body","appendChild","$el"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACAR,GAAG,CAACS,GAAJ,CAAQR,IAAR;AACAD,GAAG,CAACS,GAAJ,CAAQP,SAAR;AACAF,GAAG,CAACS,GAAJ,CAAQF,QAAR,EAAkBD,KAAlB;AAEAI,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAChD,MAAMC,GAAG,GAAG,IAAIZ,GAAJ,CAAQ;AAChBG,IAAAA,KAAK,EAALA,KADgB;AAEhBC,IAAAA,MAAM,EAANA,MAFgB;AAGhBS,IAAAA,MAAM,EAAE,gBAACC,CAAD;AAAA,aAAOA,CAAC,CAACT,GAAD,CAAR;AAAA;AAHQ,GAAR,EAITU,MAJS,EAAZ;AAKAL,EAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0BL,GAAG,CAACM,GAA9B;AACH,CAPD,E,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/* eslint no-console: 0 */\n// Run this example by adding <%= javascript_pack_tag 'hello_vue' %> (and\n// <%= stylesheet_pack_tag 'hello_vue' %> if you have styles in your component)\n// to the head of your layout file,\n// like app/views/layouts/application.html.erb.\n// All it does is render <div>Hello Vue</div> at the bottom of the page.\nimport Vue from \"vue\";\nimport Vuex from \"vuex\"\nimport VueRouter from \"vue-router\";\nimport store from \"../store/store.js\";\nimport router from \"../routes/router.js\";\nimport App from \"../app.vue\";\nimport axios from \"axios\";\nimport VueAxios from \"vue-axios\";\nimport firebase from 'firebase';\nVue.use(Vuex);\nVue.use(VueRouter);\nVue.use(VueAxios, axios);\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const app = new Vue({\n        store,\n        router,\n        render: (h) => h(App),\n    }).$mount();\n    document.body.appendChild(app.$el);\n});\n\n\n\n// The above code uses Vue without the compiler, which means you cannot\n// use Vue to target elements in your existing html templates. You would\n// need to always use single file components.\n// To be able to target elements in your existing html/erb templates,\n// comment out the above code and uncomment the below\n// Add <%= javascript_pack_tag 'hello_vue' %> to your layout\n// Then add this markup to your html template:\n//\n// <div id='hello'>\n//   {{message}}\n//   <app></app>\n// </div>\n\n\n// import Vue from 'vue/dist/vue.esm'\n// import App from '../app.vue'\n//\n// document.addEventListener('DOMContentLoaded', () => {\n//   const app = new Vue({\n//     el: '#hello',\n//     data: {\n//       message: \"Can you say hello?\"\n//     },\n//     components: { App }\n//   })\n// })\n//\n//\n//\n// If the project is using turbolinks, install 'vue-turbolinks':\n//\n// yarn add vue-turbolinks\n//\n// Then uncomment the code block below:\n//\n// import TurbolinksAdapter from 'vue-turbolinks'\n// import Vue from 'vue/dist/vue.esm'\n// import App from '../app.vue'\n//\n// Vue.use(TurbolinksAdapter)\n//\n// document.addEventListener('turbolinks:load', () => {\n//   const app = new Vue({\n//     el: '#hello',\n//     data: () => {\n//       return {\n//         message: \"Can you say hello?\"\n//       }\n//     },\n//     components: { App }\n//   })\n// })"]},"metadata":{},"sourceType":"module"}