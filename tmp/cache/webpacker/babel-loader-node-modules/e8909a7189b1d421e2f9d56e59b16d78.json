{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * Component settings\n */\nimport orderBy from 'lodash.orderby';\nvar mixin = {\n  props: {\n    /**\n     * Set the carousel to be the navigation of other carousels\n     */\n    asNavFor: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    },\n\n    /**\n     * Enable autoplay\n     */\n    autoplay: {\n      type: Boolean,\n      \"default\": false\n    },\n\n    /**\n     * Autoplay interval in milliseconds\n     */\n    autoplaySpeed: {\n      type: Number,\n      \"default\": 3000\n    },\n\n    /**\n     * Enable centered view when slidesToShow > 1\n     */\n    centerMode: {\n      type: Boolean,\n      \"default\": false\n    },\n\n    /**\n     * Slides padding in center mode\n     */\n    centerPadding: {\n      type: String,\n      \"default\": '15%'\n    },\n\n    /**\n     * Slide change delay in milliseconds\n     */\n    changeDelay: {\n      type: Number,\n      \"default\": 0\n    },\n\n    /**\n     * Enable dot indicators/pagination\n     */\n    dots: {\n      type: Boolean,\n      \"default\": true\n    },\n\n    /**\n     * Enable fade effect\n     */\n    fade: {\n      type: Boolean,\n      \"default\": false\n    },\n\n    /**\n     * Infinite loop sliding\n     */\n    infinite: {\n      type: Boolean,\n      \"default\": true\n    },\n\n    /**\n     * Index of slide to start on\n     */\n    initialSlide: {\n      type: Number,\n      \"default\": 0\n    },\n\n    /**\n     * Enable mobile first calculation for responsive settings\n     */\n    mobileFirst: {\n      type: Boolean,\n      \"default\": true\n    },\n\n    /**\n     * Enable prev/next navigation buttons\n     */\n    navButtons: {\n      type: Boolean,\n      \"default\": true\n    },\n\n    /**\n     * All settings as one object\n     */\n    options: {\n      type: Object,\n      \"default\": function _default() {\n        return null;\n      }\n    },\n\n    /**\n     * Pause autoplay when a dot is hovered\n     */\n    pauseOnDotsHover: {\n      type: Boolean,\n      \"default\": false\n    },\n\n    /**\n     * Pause autoplay when a slide is hovered\n     */\n    pauseOnHover: {\n      type: Boolean,\n      \"default\": true\n    },\n\n    /**\n     * Object containing breakpoints and settings objects\n     */\n    responsive: {\n      type: Array,\n      \"default\": function _default() {\n        return null;\n      }\n    },\n\n    /**\n     * Enable right-to-left mode\n     */\n    rtl: {\n      type: Boolean,\n      \"default\": false\n    },\n\n    /**\n     * Number of slides to scroll\n     */\n    slidesToScroll: {\n      type: Number,\n      \"default\": 1\n    },\n\n    /**\n     * Number of slides to show\n     */\n    slidesToShow: {\n      type: Number,\n      \"default\": 1\n    },\n\n    /**\n     * Slide animation speed in milliseconds\n     */\n    speed: {\n      type: Number,\n      \"default\": 300\n    },\n\n    /**\n    * Swipe distance\n    */\n    swipeDistance: {\n      type: Number,\n      \"default\": 50\n    },\n\n    /**\n     * Throttle delay in milliseconds\n     */\n    throttleDelay: {\n      type: Number,\n      \"default\": 500\n    },\n\n    /**\n     * Transition timing function\n     * Available: ease, linear, ease-in, ease-out, ease-in-out\n     */\n    timing: {\n      type: String,\n      \"default\": 'ease',\n      validator: function validator(value) {\n        return ['ease', 'linear', 'ease-in', 'ease-out', 'ease-in-out'].indexOf(value) !== -1;\n      }\n    },\n\n    /**\n     * Disable Agile carousel\n     */\n    unagile: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  computed: {\n    // Initial settings based on props and options object\n    initialSettings: function initialSettings() {\n      // options prop is excluded\n      var _this$$props = this.$props,\n          options = _this$$props.options,\n          initialSettings = _objectWithoutProperties(_this$$props, [\"options\"]); // Join settings from options\n\n\n      if (options) {\n        initialSettings = _objectSpread(_objectSpread({}, initialSettings), options);\n      } // Sort breakpoints\n\n\n      if (initialSettings.responsive) {\n        initialSettings.responsive = orderBy(initialSettings.responsive, 'breakpoint');\n      }\n\n      return initialSettings;\n    },\n    // Settings for current breakpoint\n    settings: function settings() {\n      var _this = this;\n\n      var _this$initialSettings = this.initialSettings,\n          responsive = _this$initialSettings.responsive,\n          settings = _objectWithoutProperties(_this$initialSettings, [\"responsive\"]);\n\n      if (responsive) {\n        responsive.forEach(function (option) {\n          if (settings.mobileFirst ? option.breakpoint < _this.widthWindow : option.breakpoint > _this.widthWindow) {\n            for (var key in option.settings) {\n              settings[key] = option.settings[key];\n            }\n          }\n        });\n      }\n\n      return settings;\n    }\n  }\n};\nexport default mixin;","map":null,"metadata":{},"sourceType":"module"}