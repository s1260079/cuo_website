{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport firebase from 'firebase';\nexport default {\n  data: function data() {\n    return {\n      passwd2: '',\n      user: {},\n      message: '',\n      created: ''\n    };\n  },\n  mounted: function mounted() {\n    this.getUser();\n  },\n  methods: {\n    getUser: function getUser() {\n      var _this = this;\n\n      axios.get(\"/api/users/\".concat(this.$route.params.id, \".json\")).then(function (response) {\n        return _this.user = response.data;\n      });\n    },\n    updateUser: function updateUser() {\n      var _this2 = this;\n\n      axios.put(\"/api/users/\".concat(this.$route.params.id), {\n        user: this.user\n      }).then(function (response) {\n        _this2.$router.push({\n          path: '/member'\n        });\n      })[\"catch\"](function (error) {\n        console.error(error);\n\n        if (error.response.data && error.response.data.errors) {\n          _this2.errors = error.response.data.errors;\n        }\n      });\n    },\n    pass_vali: function pass_vali() {\n      if (this.user.password.length = 0) {\n        this.message = '※ パスワードを入力してください';\n        return true;\n      } else return false;\n    },\n    pass12_vali: function pass12_vali() {\n      if (this.user.password != this.passwd2) {\n        this.message = '※ パスワードが登録済みパスワードと一致しません。';\n        return true;\n      } else return false;\n    },\n    deleteUser: function deleteUser(id) {\n      var _this3 = this;\n\n      if (this.pass_vali()) return;\n      if (this.pass12_vali()) return;\n      firebase.auth().signOut();\n      axios[\"delete\"](\"/api/users/\".concat(id)).then(function (res) {\n        _this3.$router.push({\n          path: '/member'\n        });\n      });\n    }\n  }\n};","map":{"version":3,"sources":["Mypage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,QAAA,MAAA,UAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA,EAHA;AAIA,MAAA,OAAA,EAAA;AAJA,KAAA;AAMA,GARA;AASA,EAAA,OATA,qBASA;AACA,SAAA,OAAA;AACA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA;;AACA,MAAA,KAAA,CACA,GADA,sBACA,KAAA,MAAA,CAAA,MAAA,CAAA,EADA,YAEA,IAFA,CAEA,UAAA,QAAA;AAAA,eAAA,KAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,OAFA;AAGA,KALA;AAMA,IAAA,UANA,wBAMA;AAAA;;AACA,MAAA,KAAA,CACA,GADA,sBACA,KAAA,MAAA,CAAA,MAAA,CAAA,EADA,GACA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,OADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AACA,OAJA,WAKA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,KAAA;;AACA,YAAA,KAAA,CAAA,QAAA,CAAA,IAAA,IAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AACA,UAAA,MAAA,CAAA,MAAA,GAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,MAAA;AACA;AACA,OAVA;AAWA,KAlBA;AAmBA,IAAA,SAnBA,uBAmBA;AACA,UAAA,KAAA,IAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,OAAA,GAAA,kBAAA;AACA,eAAA,IAAA;AACA,OAHA,MAIA,OAAA,KAAA;AACA,KAzBA;AA0BA,IAAA,WA1BA,yBA0BA;AACA,UAAA,KAAA,IAAA,CAAA,QAAA,IAAA,KAAA,OAAA,EAAA;AACA,aAAA,OAAA,GAAA,2BAAA;AACA,eAAA,IAAA;AACA,OAHA,MAIA,OAAA,KAAA;AACA,KAhCA;AAiCA,IAAA,UAjCA,sBAiCA,EAjCA,EAiCA;AAAA;;AACA,UAAA,KAAA,SAAA,EAAA,EAAA;AACA,UAAA,KAAA,WAAA,EAAA,EAAA;AACA,MAAA,QAAA,CAAA,IAAA,GAAA,OAAA;AACA,MAAA,KAAA,UAAA,sBAAA,EAAA,GACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AACA,OAHA;AAIA;AAzCA;AAZA,CAAA","sourcesContent":["<template>\n  <div class=\"container\">\n    <h1 style=\"text-align:center\">Mypage</h1>\n    <div class=\"box\">\n      <span class=\"item-name\">\n        <v-text-field placeholder=\"名前\" single-line solo v-model=\"user.username\"></v-text-field>\n        <v-text-field placeholder=\"パート\" single-line solo v-model=\"user.part\" ></v-text-field>\n      </span>\n       <div class=\"textarea-wrap\">\n         <textarea placeholder=\"好きなバンド、ジャンルなど\"  rows=\"8\" cols=\"80\" v-model=\"user.likeBand\"></textarea>\n       </div>\n       <div class=\"textarea-wrap\">\n         <textarea placeholder=\"一言\"  rows=\"8\" cols=\"80\" v-model=\"user.message\"></textarea>\n       </div>\n       <v-text-field placeholder=\"ユーザーを　”消去”　する際はここにパスワードを入力してください\" single-line solo v-model=\"passwd2\"></v-text-field>\n       <p style=\"text-align:center\">\n         <v-btn class=\"resisterBtn\" v-on:click=\"updateUser\">入力完了</v-btn>\n       </p>\n       <p style=\"text-align:center\">\n         <v-btn class=\"btn #e53935 red darken-1\" v-on:click=\"deleteUser(user.id)\">削除</v-btn>\n       </p>\n       <div class=\"alert\">\n        <p>{{ message }}</p>\n        <p class=\"created\">{{ created }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import axios from 'axios';\n  import firebase from 'firebase';\n  export default {\n    data: function () {\n    return {\n      passwd2: '',\n      user: {},\n      message: '',\n      created: '',\n    }\n  },\n    mounted () {\n      this.getUser()\n    },\n    methods: {\n      getUser(){\n        axios\n      .get(`/api/users/${this.$route.params.id}.json`)\n      .then(response => (this.user = response.data))\n      },\n      updateUser() {\n        axios\n        .put(`/api/users/${this.$route.params.id}`, { user: this.user })\n        .then(response => {\n          this.$router.push({ path: '/member' });\n        })\n        .catch(error => {\n          console.error(error);\n          if (error.response.data && error.response.data.errors) {\n            this.errors = error.response.data.errors;\n          }\n        });\n      },\n      pass_vali() {\n      if(this.user.password.length = 0) {\n        this.message = '※ パスワードを入力してください'\n        return true\n      }\n      else return false\n    },\n      pass12_vali() {\n      if(this.user.password != this.passwd2) {\n        this.message = '※ パスワードが登録済みパスワードと一致しません。'\n        return true\n      }\n      else return false\n    },\n      deleteUser(id) {\n        if( this.pass_vali() ) return\n        if( this.pass12_vali() ) return\n        firebase.auth().signOut()\n      axios.delete(`/api/users/${id}`)\n      .then(res => {\n        this.$router.push({ path: '/member' });\n        })\n      }\n    }\n  }\n</script>\n\n<style scoped>\n.alert {\n  height: 18px;\n  font-size: 12px;\n  text-align: left;\n  color: red;\n }\n.box {\n  margin: auto;\n}\nh1 {\n    color: black;\n    /* background-color: #F8F8FF; */\n    font-weight: 900;\n    margin-top: 40px;\n    margin-bottom: 40px;\n    font-size: 30px;\n  }\ntextarea{\n  width: 100%;\n  height: 150px;\n  padding: 5px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  appearance: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n</style>\n"],"sourceRoot":"app/javascript/views"},"metadata":{},"sourceType":"module"}